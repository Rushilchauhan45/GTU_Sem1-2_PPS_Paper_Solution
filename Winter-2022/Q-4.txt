Q.4 (a) Call by Value vs Call by Reference (3 Marks)

Call by Value: Passes a copy of the variable. Changes do not affect the original value.
Call by Reference: Passes the memory address of the variable. Changes affect the original value.

Q.4 (b) Recursion with Example (4 Marks)

#include <stdio.h>
int factorial(int n) {
    if (n == 0) return 1;
    return n * factorial(n - 1);
}
int main() {
    printf("Factorial: %d", factorial(5));
    return 0;
}

Q.4 (c) Sum of Array Elements (7 Marks)

#include <stdio.h>
int main() {
    int arr[5] = {1, 2, 3, 4, 5}, sum = 0;
    for (int i = 0; i < 5; i++) {
        sum += arr[i];
    }
    printf("Sum: %d", sum);
    return 0;
}

OR
Q.4 (c)Sorting Array in Ascending Order (7 Marks)

#include <stdio.h>
int main() {
    int arr[5] = {5, 3, 4, 1, 2}, temp;
    for (int i = 0; i < 5; i++) {
        for (int j = i + 1; j < 5; j++) {
            if (arr[i] > arr[j]) {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
    for (int i = 0; i < 5; i++) printf("%d ", arr[i]);
    return 0;
}